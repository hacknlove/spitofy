---
import FluentEmojiFlatAstonishedFace from "./FluentEmojiFlatAstonishedFace.astro";
import FluentEmojiFlatExplodingHead from "./FluentEmojiFlatExplodingHead.astro";
import FluentEmojiFlatHeartOnFire from "./FluentEmojiFlatHeartOnFire.astro";
import FluentEmojiFlatManDancing from "./FluentEmojiFlatManDancing.astro";
import FluentEmojiFlatRaisingHands from "./FluentEmojiFlatRaisingHands.astro";
import FluentEmojiFlatSignOfTheHorns from "./FluentEmojiFlatSignOfTheHorns.astro";
import MdiHeart from "./MdiHeart.astro";
---

<button aria-label="open reactions menu">
  <MdiHeart />
  <div class="sub" id="reactions">
    <span><FluentEmojiFlatAstonishedFace id="astonished" /></span>
    <span><FluentEmojiFlatExplodingHead id="exploding" /></span>
    <span><FluentEmojiFlatHeartOnFire id="heart" /></span>
    <span><FluentEmojiFlatManDancing id="dancing" /></span>
    <span><FluentEmojiFlatRaisingHands id="raising" /></span>
    <span><FluentEmojiFlatSignOfTheHorns id="thorns" /></span>
  </div>
</button>

<style lang="scss">
  @use "../AudioPlayerButton.scss" as *;

  button {
    @include AudioPlayerButton;

    display: none;

    .sub {
      width: auto;
      span {
        padding: 4px;
      }
    }
  }

  body.playing button {
    display: block;
  }

</style>
<style is:global lang="scss">

  .reaction {
    position: fixed;
    top: 100vh;
    left: var(--from);
    animation:
      fly var(--speed) linear forwards,
      trembling var(--quarter-note) linear infinite;
    width: 50px;
    height: 50px;
  }

  @keyframes fly {
    from {
      opacity: 0.9;
      top: calc(100vh - 70px);
      left: var(--from);
      width: 70px;
      height: 70px;
    }
    to {
      opacity: 0.4;
      top: -50px;
      left: var(--to);
    }
  }
  @keyframes trembling {
    0% {
      transform: scale(1.15);
    }
    100% {
      transform: scale(0.85);
    }
  }
</style>

<script>
  import { launch } from "@/js/reactions.ts";

  const audio = document.getElementById("audioGlobal") as HTMLAudioElement;

  document.addEventListener("astro:page-load", () => {
    document.querySelectorAll("#reactions svg").forEach((reaction) => {
      reaction.addEventListener("click", () => {
        setTimeout(() => {
          const closest = reaction.closest("button:focus") as HTMLButtonElement;
          closest.blur();
        }, 100);
        launch(reaction.id);

        if (audio.currentTime !== 0) {
          fetch("/sendReaction", {
            method: "POST",
            body: JSON.stringify({
              track: audio.dataset.slug,
              reaction: reaction.id,
              currentTime: audio.currentTime,
            }),
          });
        }
      });
    });
  });
</script>
