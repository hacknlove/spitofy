---
import CiHamburgerMd from "./CiHamburgerMd.astro";

const url = Astro.url;

const pathnames = {
  "/": "Spitofy",
  "/tracks": "Tracks",
  "/tour": "Tour",
  "/shop": "Shop",
  "/about": "About",
};

const current =
  pathnames[url.pathname] ?? (url.pathname.startsWith("/track") && "tracks");
---

<div>
  <button aria-label="open submenu popup">
    <CiHamburgerMd class="openSubmenu" />
  </button>
  <nav>
    {
      Object.entries(pathnames).map(([pathname, label]) => (
        <a class:list={[{ current: current === label }]} href={pathname}>
          {label}
        </a>
      ))
    }
  </nav>
</div>

<script>
  function random() {
    if (!document.body.classList.contains("playing")) {
      window.requestAnimationFrame(random);
      return;
    }
    // 'NodeListOf' is not defined
    const as = document.querySelectorAll(
      "nav>a:not(:hover)",
      // eslint-disable-next-line
    ) as NodeListOf<HTMLElement>;

    as.forEach((a) => {
      a.style.fontWeight = (200 + Math.random() * 700).toString();

      if (Math.random() < 0.9) {
        a.style.textTransform = "uppercase";
      } else {
        a.style.textTransform = "lowercase";
      }

      a.style.textDecorationLine = "none";

      if (Math.random() > 0.95) {
        a.style.letterSpacing = -2 + Math.random() * 6 + "px";
      }
      if (Math.random() < 0.8) {
        a.style.fontStyle = "normal";
      } else {
        a.style.fontStyle = "oblique";
      }
    });

    const current = document.querySelector("nav>a.current") as HTMLElement;

    if (current) {
      current.style.textDecorationThickness = Math.random() * 5 + "px";
      current.style.textDecorationLine = [
        "underline",
        "overline",
        "line-through",
      ][Math.floor(Math.random() * 3)];
      current.style.textDecorationColor = `hsl(${
        Math.random() * 360
      }, 100%, 75%)`;
      current.style.textDecorationStyle = ["solid", "dotted", "dashed"][
        Math.floor(Math.random() * 3)
      ];
    }

    window.requestAnimationFrame(random);
  }

  window.requestAnimationFrame(random);
</script>

<style lang="scss">
  div {
    position: relative;
    color: white;
  }
  nav {
    position: absolute;
    top: 62px;
    right: -210px;
    width: 200px;
    display: flex;
    flex-direction: column;
    backdrop-filter: hue-rotate(180deg) contrast(13) blur(10px);
    background-color: #0006;
    padding: 10px;
    box-sizing: border-box;
    row-gap: 10px;
    box-shadow: 0 0 10px 10px rgba(0, 0, 0, 0.151);
    z-index: 10;
    transition: right var(--eighth-note) ease-out;
    a {
      text-decoration: none;
      color: #fff;
      width: 6em;
      &.current {
        text-decoration: dotted underline;
      }
      color: white;
      text-decoration: none;
      text-transform: uppercase;
      font-size: 30px;
      font-weight: 100;
      letter-spacing: 5px;
    }
  }
  div:focus-within,
  div:hover {
    nav {
      right: -10px;
    }
  }

  button {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    cursor: url(/hand.webp), pointer;
    .openSubmenu {
      color: #fff;
      height: 50px;
      width: 50px;
    }
  }
</style>
