<div id="WaveFormProgress">
  <img class="background" />
  <img class="foreground" />
  <span></span>
</div>
<style>
  div {
    width: 100%;
    height: 70px;
    position: relative;
  }

  span {
    color: #fff;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    mix-blend-mode: difference;
    font-weight: 900;
    font-family: monospace;
    font-size: 20px;
  }

  .background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .foreground {
    top: 0;
    left: 0;
    height: 100%;
    position: absolute;
    width: 100%;
    filter: invert(1);
    transition: clip-path 0.1s;
  }
</style>
<script>
  function secondsToHuman(seconds) {
    const date = new Date(seconds * 1000);
    const hh = date.getUTCHours();
    const mm = date.getUTCMinutes().toString().padStart(2, "0");
    const ss = date.getUTCSeconds().toString().padStart(2, "0");
    if (hh) {
      return `${hh}:${mm}:${ss}`;
    }
    return `${mm}:${ss}`;
  }

  function updateTime() {
    const WaveFormProgess = document.getElementById(
      "WaveFormProgress",
    ) as HTMLDivElement;

    const audio = document.getElementById("audioGlobal") as HTMLMediaElement;

    const span = WaveFormProgess.querySelector("span") as HTMLSpanElement;
    span.innerText = `${secondsToHuman(audio.currentTime)} / ${secondsToHuman(
      audio.duration,
    )}`;

    const foreground = WaveFormProgess.querySelector(
      ".foreground",
    ) as HTMLImageElement;
    foreground.style.clipPath = `inset(0 0 0 ${
      (audio.currentTime / audio.duration) * 100
    }%)`;
  }

  function updateMetadata() {
    const audio = document.getElementById("audioGlobal") as HTMLMediaElement;

    const WaveFormProgess = document.getElementById(
      "WaveFormProgress",
    ) as HTMLDivElement;

    WaveFormProgess.querySelectorAll("img").forEach((img) => {
      img.src = `${import.meta.env.PUBLIC_CF_IMAGE_URL}${
        audio.dataset.waveform
      }/waveform`;
    });

    updateTime();
  }
  document.addEventListener("astro:page-load", () => {
    updateMetadata();
  });
  const audio = document.getElementById("audioGlobal") as HTMLMediaElement;
  audio.addEventListener("timeupdate", updateTime);

  audio.addEventListener("loadedmetadata", updateMetadata);
</script>
